clc, clearvars
close all
% Create a bowtieRounded antenna
% Generated by MATLAB(R) 9.13 and Antenna Toolbox 5.3.
% Generated on: 24-Mar-2023 12:50:18

%% Antenna Properties 
targetF                  = 100*1e9;
antennaObject            = design(bowtieRounded, targetF);
antennaObject.Length     = 0.001146;
antennaObject.FlareAngle = 124.5669;
% Show
% figure;
% show(antennaObject)

%% Antenna Analysis 
% Define frequency range 
Nf              = 60;
fmain           = 100e9;
fmin            = 20e9;
fmax            = 190e9;
freqRange = linspace(fmin, fmax, Nf);

% Reference Impedance 
refImpedance = 50;

%% ===== Show Mesh / Current =====
figure('Position', [480 550 470 440]);
current(antennaObject, fmain)

%% ===== calc Impedance =====

disp('    [mlab]: calculating Impedance')
Z = impedance(antennaObject, freqRange);
ReZ = real(Z);
ImZ = imag(Z);

%% ==== S parameter ====
S11db = calcS11(Z, refImpedance);
% Re(Z) @ Im(Z)=0
fcross = @(x) find(diff(sign(x)));
idxCross = fcross(ImZ);

% s = sparameters(antennaObject, freqRange, refImpedance);
% rfplot(s)

% ===== Plotting Stack Analysis =====
saveName = 'Nf'+string(Nf)+'Poly_Z_S11.png';
titleName = 'Stack characteristics';
plot_Ant(ReZ = ReZ, ImZ = ImZ,...
         freqRange = freqRange,...
         idxCross = idxCross,...
         S11db = S11db,...
         saveName = saveName, title = titleName)
disp('    [mlab]: simulation compelete')




% ===== Calc S11 function =====
function S11db = calcS11(Z, z0)
    S11db = 20*log10(abs((Z - z0) ./ (Z + z0)));
end

% ===== Plot Obj function =====
function plot_Ant(Args)
    arguments
        Args.ReZ
        Args.ImZ
        Args.freqRange
        Args.idxCross
        Args.S11db
        Args.saveName
        Args.title
    end
    lw = 2;
    fig = figure;
    fig.Position = [0 0 950 450];
    t = tiledlayout(fig,1,2,'TileSpacing','Compact','Padding','Compact',...
        'OuterPosition',[0 0 0.8 1]);
    title(t, Args.title)

    % ==== Plot 1 ====
    ax1 = nexttile;
    ax1.FontSize = 18;
    ax1.LineWidth = 2;
    plot(ax1,Args.freqRange.*1e-9, Args.ReZ,...
         'b','LineWidth',lw,'DisplayName','Re(Z)');
    hold on
    plot(ax1,Args.freqRange.*1e-9, Args.ImZ,...
         'r','LineWidth',lw,'DisplayName','Im(Z)');
    hold off
    yline(ax1,0,'LineWidth',1.5,'linestyle','-',...
        'HandleVisibility','off')
    if ~isempty(Args.idxCross)
        xline(ax1,Args.freqRange(Args.idxCross)*1e-9,...
            'LineWidth',1.0,'Color','#29353b',...
            'linestyle','--','HandleVisibility','off');
    end

    % ylim([-200 300]);
    strTitle = 'Z';
                % ', angle = ' + strAngle +...
                % ', length = ' + strLength;
    title(ax1, strTitle);
    xlabel(ax1, 'Frequency (GHz)')
    ylabel(ax1, 'Z (Ohms)')
    % ylim(ax1, [-200 200]);
    grid(ax1)
    legend(ax1)

    dim = [0.77 0.62 .3 .3];
    strPeaks = 'Re(Z)@[Im(Z)=0] = ' +...
                string(round(Args.ReZ(Args.idxCross),1));
    annotation('textbox',dim,'String',strPeaks,'FitBoxToText','on');

    % ==== Plot 2 ====
    ax2 = nexttile;
    plot(ax2,Args.freqRange.*1e-9, Args.S11db,...
         'Color','#0071ff','LineWidth',lw,...
         'DisplayName','S_1_1');
    if ~isempty(Args.idxCross)
        xline(ax1,Args.freqRange(Args.idxCross)*1e-9,...
            'LineWidth',1.0,'Color','#29353b',...
            'linestyle','--','HandleVisibility','off');
    end

    % ylim([-15,0]);
    strTitle = 'S_1_1';
                % ', angle = ' + strAngle +...
                % ', length = ' + strLength;
    title(ax2, strTitle);
    xlabel(ax2, 'Frequency (GHz)')
    ylabel(ax2, 'Magnitude (dB)')
    grid(ax2)
    legend(ax2)
    % figure(3);
    % rfplot(Args.sParam,1,1,'r');
    % ==== Save pic ====
    % saveName = Args.saveName;
    % exportgraphics(fig,saveName,'Resolution',500);
end
